////////////////////////////////////////////////////////////////////////////////////  LINNAEUS UNIVERSITY//  Copyright 2012 Linnaeus university, Media Technology, sweden.//  Some Rights Reserved.////  NOTICE: LNU Media Technology permits you to use and modify this file//  in accordance with the terms of the license agreement accompanying it.//////////////////////////////////////////////////////////////////////////////////package se.lnu.mediatechnology.stickossdk.net{	//------------------------------------------------------------------------------	//	// Imports	//	//------------------------------------------------------------------------------		import se.lnu.mediatechnology.stickossdk.net.HighscorePackage;	import se.lnu.mediatechnology.stickossdk.core.Session;	/**	 * 	 * 	-- !WORKING COPY! --	 *		 * 	This class manages and simplifies communication with StickOS HighScore 	 *	API, use it to save and retrieve high scores. This class is under development 	 *	and may change in future.	 * 	 *	@author		Henrik Andersen	 *	@version	1.0	 * 	 */	public class Highscore	{		//-----------------------------------------------------------------------		//		// Private constants		//		//-----------------------------------------------------------------------				private const DEFAULT_DATABASE_LOCATION:String = 'http://localhost/stickos';				//-----------------------------------------------------------------------		//		// Private properties		//		//-----------------------------------------------------------------------				private var smartObject:Object;				//-----------------------------------------------------------------------		//		// Constructor method		//		//-----------------------------------------------------------------------				/**		 * 		 * Constructor.		 *  		 */		public function Highscore()		{					}				//-----------------------------------------------------------------------		//		// Public methods		//		//-----------------------------------------------------------------------				/**		 *		 *	DESC..		 * 		 * 	@param	gameId		Desc..		 *	@param	tableId		Desc..		 *	@param	score		Desc..		 *	@param	range		Desc..		 *  @param	callback	Desc..		 * 		 *	@return void		 *		 */		public function smartSend(gameId:uint, tableId:uint, score:int, range:uint = 10, callback:Function = null):void 		{			smartObject				= new Object();			smartObject.gameId		= gameId;			smartObject.tableId		= tableId;			smartObject.score		= score;			smartObject.range		= range;			smartObject.callback	= callback;						checkScore(gameId, tableId, score, smartCheckForKeyboardUsage);		}				/**		 *		 *	DESC..		 * 		 * 	@param	gameId		Desc..		 *	@param	tableId		Desc..		 *	@param	score		Desc..		 *  @param	name		Desc..		 *  @param	callback	Desc..		 * 		 *	@return void		 *		 */		public function submit(gameId:uint, tableId:uint, score:int, name:String, callback:Function = null):void 		{			var query:String = DEFAULT_DATABASE_LOCATION+'?method_id=2&game_id='+gameId+'&table_id='+tableId+'&name='+name+'&score='+score;						var highscorePackage:HighscorePackage	= new HighscorePackage();				highscorePackage.query				= query;				highscorePackage.callback			= callback;				highscorePackage.send();		}				/**		 *		 *	DESC..		 * 		 * 	@param	gameId		Desc..		 *	@param	tableId		Desc..		 *	@param	limit		Desc..		 *  @param	callback	Desc..		 * 		 *	@return void		 *		 */		public function receive(gameId:uint, tableId:uint, limit:uint, callback:Function = null):void 		{			var query:String = DEFAULT_DATABASE_LOCATION+'?method_id=1&game_id='+gameId+'&table_id='+tableId+'&limit='+limit;						var highscorePackage:HighscorePackage	= new HighscorePackage();				highscorePackage.query				= query;				highscorePackage.callback			= callback;				highscorePackage.send();		}				/**		 *		 *	DESC..		 * 		 * 	@param	gameId		Desc..		 *	@param	tableId		Desc..		 *	@param	score		Desc..		 *  @param	callback	Desc..		 * 		 *	@return void		 *		 */		public function checkScore(gameId:uint, tableId:uint, score:int, callback:Function = null):void 		{			var query:String = DEFAULT_DATABASE_LOCATION+'?method_id=3&game_id='+gameId+'&table_id='+tableId+'&score='+score;						var highscorePackage:HighscorePackage	= new HighscorePackage();				highscorePackage.query				= query;				highscorePackage.callback			= callback;				highscorePackage.send();		}				//-----------------------------------------------------------------------		//		// Private methods		//		//-----------------------------------------------------------------------				/**		 *		 *	DESC..		 * 		 *	@param	response	Desc..		 * 		 *	@return void		 *		 */		private function smartCheckForKeyboardUsage(response:XML):void 		{			if(response['header']['position'] <= smartObject.range)			{				Session.screenKeyboard.useKeyboard(smartCheckForHighscoreInsertion, 'Enter Your Name');			}			else			{				smartObject.callback(response);			}		}				/**		 *		 *	DESC..		 *		 *	@param	name	Desc..		 * 		 *	@return void		 *		 */		private function smartCheckForHighscoreInsertion(name:String):void 		{			submit(smartObject.gameId, smartObject.tableId, smartObject.score, name, smartObject.callback);		}	}}